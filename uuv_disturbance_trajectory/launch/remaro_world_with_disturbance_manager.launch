<launch>

      <!--
        Unpause timeout, this is done to allow Gazebo and its plugins to properly
        start before all other ROS nodes. Otherwise it can happen that ROS nodes
        start before some services or topics are available, leading to some
        initialization issues.
    -->
    <arg name="unpause_timeout" default="5"/>
    
    <!-- Start the launch file with record:=false if it is not being used by the optimizer -->
    <arg name="record" default="true"/>
    <arg name="bag_filename" default="disturb_recording.bag"/>
    
    <!-- Setup for a timeout for the simulation run -->
    <arg name="set_timeout" default="false"/>
    <arg name="timeout" default="300"/>

    <!-- Vehicle's initial position -->
    <arg name="x" default="-40"/>
    <arg name="y" default="0"/>
    <arg name="z" default="-16"/>
    <arg name="yaw" default="0"/>

    <!-- Controller parameters -->
    <arg name="K" default="5,5,5,5,5,5"/>
    <arg name="Kd" default="4118.98,4118.98,4118.98,8000.0,8000.0,8000.0"/>
    <arg name="Ki" default="0.06144,0.06144,0.06144,0.078,0.078,0.078"/>
    <arg name="slope" default="0.182,0.182,0.182,3.348,3.348,3.348"/>

    <include file="$(find remaro_worlds)/launch/min_pipes.launch">
    </include>

    <include file="$(find uuv_descriptions)/launch/upload_rexrov.launch">
        <arg name="x" default="$(arg x)"/>
        <arg name="y" default="$(arg y)"/>
        <arg name="z" default="$(arg z)"/>
        <arg name="yaw" default="$(arg yaw)"/>
    </include>
    
    
  

    <include file="$(find uuv_trajectory_control)/launch/rov_nmb_sm_controller.launch">
        <arg name="uuv_name" value="rexrov"/>
        <arg name="model_name" value="rexrov"/>
        <arg name="K" value="$(arg K)"/>
        <arg name="Kd" value="$(arg Kd)"/>
        <arg name="Ki" value="$(arg Ki)"/>
        <arg name="slope" value="$(arg slope)"/>
    </include>


       <include file="$(find uuv_control_utils)/launch/start_disturbance_manager.launch">
        <arg name="uuv_name" value="rexrov"/>
        <arg name="use_file" value="true"/>
        <arg name="disturbance_file" value="$(find uuv_disturbance_trajectory)/config/disturbances.yaml"/>
    </include>  
    
    
    <include file="$(find uuv_control_utils)/launch/send_waypoints_file.launch">
        <arg name="uuv_name" value="rexrov"/>
        <arg name="interpolator" value="lipb"/>
    </include>
  
    
      <node pkg="rosbag" type="record" name="disturb_recording"
        args="record -O $(arg bag_filename)
        /rexrov/dp_controller/trajectory
        /rexrov/dp_controller/reference
        /rexrov/pose_gt_ned
        /hydrodynamics/current_velocity
        /rexrov/thruster_manager/input
        /rexrov/wrench_perturbation
        /rexrov/thrusters/0/thrust
        /rexrov/thrusters/1/thrust
        /rexrov/thrusters/2/thrust
        /rexrov/thrusters/3/thrust
        /rexrov/thrusters/4/thrust
        /rexrov/thrusters/5/thrust
        /rexrov/thrusters/6/thrust
        /rexrov/thrusters/7/thrust"
        if="$(arg record)"/>

    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find uuv_gazebo)/rviz/controller_demo.rviz"/>
</launch>
